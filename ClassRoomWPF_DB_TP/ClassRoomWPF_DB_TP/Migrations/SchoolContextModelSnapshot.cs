// <auto-generated />
using System;
using ClassRoomWPF_DB_TP.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace ClassRoomWPF_DB_TP.Migrations
{
    [DbContext(typeof(SchoolContext))]
    partial class SchoolContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("ClassRoomWPF_DB_TP.Models.Grade", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("GivenAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("StudentId")
                        .HasColumnType("integer");

                    b.Property<int>("SubjectId")
                        .HasColumnType("integer");

                    b.Property<int>("TeacherId")
                        .HasColumnType("integer");

                    b.Property<int>("Value")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("StudentId");

                    b.HasIndex("SubjectId");

                    b.HasIndex("TeacherId");

                    b.ToTable("Grades");
                });

            modelBuilder.Entity("ClassRoomWPF_DB_TP.Models.Person", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Login")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasMaxLength(13)
                        .HasColumnType("character varying(13)");

                    b.HasKey("Id");

                    b.ToTable("Persons");

                    b.HasDiscriminator<string>("Role").HasValue("Person");

                    b.UseTphMappingStrategy();
                });

            modelBuilder.Entity("ClassRoomWPF_DB_TP.Models.Subject", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Subjects");
                });

            modelBuilder.Entity("ParentStudent", b =>
                {
                    b.Property<int>("ChildrenId")
                        .HasColumnType("integer");

                    b.Property<int>("ParentsId")
                        .HasColumnType("integer");

                    b.HasKey("ChildrenId", "ParentsId");

                    b.HasIndex("ParentsId");

                    b.ToTable("ParentStudent", (string)null);
                });

            modelBuilder.Entity("ClassRoomWPF_DB_TP.Models.Administrator", b =>
                {
                    b.HasBaseType("ClassRoomWPF_DB_TP.Models.Person");

                    b.HasDiscriminator().HasValue("Administrator");
                });

            modelBuilder.Entity("ClassRoomWPF_DB_TP.Models.Curator", b =>
                {
                    b.HasBaseType("ClassRoomWPF_DB_TP.Models.Person");

                    b.HasDiscriminator().HasValue("Curator");
                });

            modelBuilder.Entity("ClassRoomWPF_DB_TP.Models.Parent", b =>
                {
                    b.HasBaseType("ClassRoomWPF_DB_TP.Models.Person");

                    b.HasDiscriminator().HasValue("Parent");
                });

            modelBuilder.Entity("ClassRoomWPF_DB_TP.Models.Student", b =>
                {
                    b.HasBaseType("ClassRoomWPF_DB_TP.Models.Person");

                    b.HasDiscriminator().HasValue("Student");
                });

            modelBuilder.Entity("ClassRoomWPF_DB_TP.Models.Teacher", b =>
                {
                    b.HasBaseType("ClassRoomWPF_DB_TP.Models.Person");

                    b.Property<string>("SubjectName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasDiscriminator().HasValue("Teacher");
                });

            modelBuilder.Entity("ClassRoomWPF_DB_TP.Models.Grade", b =>
                {
                    b.HasOne("ClassRoomWPF_DB_TP.Models.Student", "Student")
                        .WithMany("Grades")
                        .HasForeignKey("StudentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ClassRoomWPF_DB_TP.Models.Subject", "Subject")
                        .WithMany()
                        .HasForeignKey("SubjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ClassRoomWPF_DB_TP.Models.Teacher", "Teacher")
                        .WithMany("GivenGrades")
                        .HasForeignKey("TeacherId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Student");

                    b.Navigation("Subject");

                    b.Navigation("Teacher");
                });

            modelBuilder.Entity("ParentStudent", b =>
                {
                    b.HasOne("ClassRoomWPF_DB_TP.Models.Student", null)
                        .WithMany()
                        .HasForeignKey("ChildrenId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ClassRoomWPF_DB_TP.Models.Parent", null)
                        .WithMany()
                        .HasForeignKey("ParentsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ClassRoomWPF_DB_TP.Models.Student", b =>
                {
                    b.Navigation("Grades");
                });

            modelBuilder.Entity("ClassRoomWPF_DB_TP.Models.Teacher", b =>
                {
                    b.Navigation("GivenGrades");
                });
#pragma warning restore 612, 618
        }
    }
}
